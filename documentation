================     COMENZAR PROYECTO ( LOCAL )     ==================

.gitignore -> Ese archivo se crea para que todos los archivos o directorios que se quieren ignorar

'nombre de carpeta'/ -> De esta forma se ignora la carpeta

/'nombre de carpeta'/*.txt -> De esta forma se ignoran todos los archivos de esta carpeta

Despues de haber creado el archivo .gitignore realizamos la siguientes lineas de comando:

git init -> Cobre la raiz del proyecto

git add . ->Para preparar los archivos como si se hubiera sacado una fotografia, este toma todos los cambios desde el ultimo commit

git commit -m "Se coloca un msm" -> Se toma la fotografia de mis archivos

git checkout -- . -> Sirve para regenerar el proyecto si es que por error se elimino alguna carpeta

================     SUBIR A UN REPOSITORIO EN GUTHUB     ==================

***   or push an existing repository from the command line   ***
***   se copia todo como esta y se pega en terminal   ***

git remote add origin /*direccion de github*/
git branch -M main
git push -u origin main

recargamos y ya se deberia poder ver todos mis archivos en el repo de github

================     CREAR UN ARCHIVO README.md     ==================
Sirve para que en el repo se muestre la info. del proyecto

git add .
git commit -m "Leyenda"
git push -> Para desplegar en github


******************************************************************************************************************************************************************************************
================     COMENZAR PROYECTO ( LOCAL )     ==================

Iniciar el proyecto:

#Desde Terminal:
Se tiene que agregar el siguiente comando:
```
--  git init
```
*La forma de comprobar con el comando-> ls -a, deberia mostrar un archivo oculto .git

Archivos para documentos:
git status -> Con el comando, confirmas que no ha trackeado el archivo
git add . -> Sirve para mover archivos de área de trabajo al área al staging
git commit -> Sirve para mover archivos de área de trabajo al staging de repositorio -- user$ git commmit -m "Primer Commit" -- 
git log -> Es para ver el contenido del áre adel repositorio

Se puede crear un nuevo archivo:
touch README.md

================     CREAR UN NUEVO REPOSITORIO     ==================

1.- SE DEBE CREAR EL REPOSITORIO EN EL LOCAL
2.- SE DEBE CREAR EL REPOSITORIO EN EL SERVIDOR (GITHUB)
3.- INDICAR AL REPO LOCAL A CUAL REPOSITORIO REMOTO SE VA A CONECTAR

Se crea el repositorio en GITHUB de forma normal:
-Debe ser publico

Y por ultimo debemos indicar al repo. Local cual sera el repo. remoto al cual debe conectarse. GITHUB muestra las instrucciones de como se debe hacer:
git init
git add README.md
git commit -m "Primer Commit"
git branch -M main (aqui puedes cambiar el nombre de main)
git remote add origin git@github.com:yfbdfguekfq582357123
git push -u origin main

Y con esto se veran los cambio en local

================     DESCARGAR REPOSITORIOS     ==================

Lo primero que se debe de hacer es copiar la url del proyecto.
Con las claves SSH
Y en la terminal ejecutar:
git clone -> y la url del repo remoto


================     RAMAS en Github     ==================
Las ramas son lineas de tiempo paralelas a nuestro flujo principal de trabajo, y para ver la ramas que se tiene en GIT es con el sig. comando:

-- git branch

** para crear una nueva rama
git switch -c "nombre de la rama"

Para que se vean las ramas en GiTHUB, se debe a que primero se tiene que actualizar el repo. remoto con la rama que se creo en el repo local

-- git push origin "nombre de la rama"
ya con esto se mostrara la rama en el repo remoto.

Cuando ya se tengan los cambios en la rama y queremos integrarlo con el flujo principal
1.-Es movernos al flujo de trabajo al cual queremos unir lo cambios
-- git switch main (nombre de la rama a unir) -> Coneste nos cambia a la ram main

Ya que estemos en la rama que va a recibir los cambios ejecutamos
-- git merge (nomre de la rama que contiene los cambios)

== Clase 2 del modulo 4 ==





================     COMENZAR PROYECTO ( LOCAL ) CF     ==================

git init -> Para empezar en la carpeta de trabajo
git status -> Preguntar el estatus de nuestro Repo
git add .-> Para agregar todos los archivos al area de trabajo
git rm --cached 'nomvre del archivo' -> Quiar el archivo que este en el área de trabajo


================     COMMIT     ==================
Punto de salvado de un proyecto
git commit -m "Mensaje de Commit"
git log -> Para revisar los commits que se han realizado
git chekcout -> Es para viajar entre commits realizados
git chekcout master-> Es para viajar al ultimo commit realizado
fit reset --soft 'Aqui va el commit' -> Es para eliminar un commit Soft solo elimina en GIT y no en el espacio de trabajo LOCAL
fit reset --hard 'Aqui va el commit' -> Eliminara toda l ainformación hasta en local

================     RAMAS     ==================
git branch -> Para revisar las ramas
git branch 'nombre'-> Para crear la rama
git checkout 'nombre de la rama' ->Par acambiar de rama
git merge -> para unir la rama de pruebas a la rama master
git branch 'nombre' -d->Sirve para eliminar ramas


================     COMENZAR PROYECTO ( LOCAL ) GITHUB CF     ==================

